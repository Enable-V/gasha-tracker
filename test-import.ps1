# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HSR URL –∏ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö

$uid = "123456789"

Write-Host "=== HSR Gacha Auto Import Script ===" -ForegroundColor Cyan
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HSR URL
function Get-HSRGachaURL {
    Write-Host "üîç –ü–æ–ª—É—á–µ–Ω–∏–µ HSR Gacha URL..." -ForegroundColor Yellow
    
    try {
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL –∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤–µ—Å—å –≤—ã–≤–æ–¥
        Write-Host "‚ö° –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏..." -ForegroundColor Gray
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∫–∞–≤—ã—á–∫–∞–º–∏
        $policy = "Set-ExecutionPolicy Bypass -Scope Process -Force"
        $security = "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072"
        $download = "(New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Enable-V/honkai/main/scripts/hsr_getlink.ps1')"
        $execute = "iex `"$download`""
        
        $fullCommand = "$policy; $security; $execute"
        
        $output = Invoke-Expression $fullCommand 2>&1 | Out-String
        
        Write-Host "üìÑ –ü–æ–ª—É—á–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥:" -ForegroundColor Gray
        $outputLines = $output -split "`n"
        foreach ($line in $outputLines) { 
            if ($line.Trim()) { 
                Write-Host "   $line" -ForegroundColor DarkGray 
            } 
        }
        
        # –ò—â–µ–º URL –≤ –≤—ã–≤–æ–¥–µ –±–æ–ª–µ–µ –≥–∏–±–∫–æ
        $urlPatterns = @(
            'https://public-operation-hkrpg[^\s]+',
            'https://api-os-takumi[^\s]+',
            'https://[^\s]*gacha_record[^\s]*'
        )
        
        foreach ($pattern in $urlPatterns) {
            $matches = [regex]::Matches($output, $pattern)
            foreach ($match in $matches) {
                $url = $match.Value
                if ($url -match "authkey=" -and $url.Length -gt 100) {
                    Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è URL!" -ForegroundColor Green
                    Write-Host "üîó URL: $($url.Substring(0, 100))..." -ForegroundColor Gray
                    return $url
                }
            }
        }
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ URL, –ø–æ–ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –∏–∑ clipboard
        try {
            $clipboardContent = Get-Clipboard -ErrorAction SilentlyContinue
            if ($clipboardContent -and ($clipboardContent -match "https://.*gacha_record.*authkey=")) {
                Write-Host "‚úÖ URL –Ω–∞–π–¥–µ–Ω–∞ –≤ –±—É—Ñ–µ—Ä–µ –æ–±–º–µ–Ω–∞!" -ForegroundColor Green
                return $clipboardContent
            }
        } catch {
            Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞" -ForegroundColor Yellow
        }
        
        throw "URL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –≤ –≤—ã–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∏ –≤ –±—É—Ñ–µ—Ä–µ –æ–±–º–µ–Ω–∞"
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è URL: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:" -ForegroundColor Yellow
        Write-Host "   - Honkai Star Rail –∑–∞–ø—É—â–µ–Ω–∞" -ForegroundColor Yellow
        Write-Host "   - –í—ã –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ –∏—Å—Ç–æ—Ä–∏—é –∫—Ä—É—Ç–æ–∫ –≤ –∏–≥—Ä–µ" -ForegroundColor Yellow
        Write-Host "   - PowerShell –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
        return $null
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
Write-Host "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å UID: $uid" -ForegroundColor Cyan
try {
    $createResult = Invoke-RestMethod -Uri "http://localhost:3001/api/test/create-user" -Method POST -ContentType "application/json" -Body "{`"uid`": `"$uid`"}"
    Write-Host "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: $($createResult.user.uid)" -ForegroundColor Green
} catch {
    if ($_.Exception.Message -match "already exists" -or $_.Exception.Message -match "409") {
        Write-Host "‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
    } else {
        Write-Host "‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $($_.Exception.Message)" -ForegroundColor Yellow
    }
}

# –ü–æ–ª—É—á–∞–µ–º URL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
$gachaURL = Get-HSRGachaURL

if ($gachaURL) {
    Write-Host ""
    Write-Host "üîó –ü–æ–ª—É—á–µ–Ω–Ω–∞—è URL: $($gachaURL.Substring(0, 100))..." -ForegroundColor Gray
    Write-Host ""
    
    # –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    Write-Host "üì• –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è UID: $uid" -ForegroundColor Cyan
    try {
        $importResult = Invoke-RestMethod -Uri "http://localhost:3001/api/upload/url/$uid" -Method POST -ContentType "application/json" -Body "{`"url`": `"$gachaURL`"}" -TimeoutSec 60
        
        Write-Host ""
        Write-Host "üéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        Write-Host "üìä –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: $($importResult.imported)" -ForegroundColor Green
        Write-Host "‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: $($importResult.skipped)" -ForegroundColor Yellow
        Write-Host "üíæ –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $($importResult.message)" -ForegroundColor Cyan
        
    } catch {
        Write-Host ""
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: $($_.Exception.Message)" -ForegroundColor Red
        
        # –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        if ($_.ErrorDetails) {
            Write-Host "üìù –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: $($_.ErrorDetails.Message)" -ForegroundColor Red
        }
    }
} else {
    Write-Host ""
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å HSR URL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏" -ForegroundColor Red
    Write-Host "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤—Ä—É—á–Ω—É—é:" -ForegroundColor Yellow
    Write-Host "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex `"&{`$((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Enable-V/honkai/main/scripts/hsr_getlink.ps1'))}`"" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "=== –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===" -ForegroundColor Cyan
