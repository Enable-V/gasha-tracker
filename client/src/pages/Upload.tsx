import { useState } from 'react'
import { useAuth } from '../context/AuthContext'
import axios from 'axios'

const Upload = () => {
  const { user, isAuthenticated } = useAuth()
  const [selectedMethod, setSelectedMethod] = useState<'url' | 'file'>('url')
  const [isLoading, setIsLoading] = useState(false)
  const [url, setUrl] = useState('')
  const [result, setResult] = useState<any>(null)
  const [error, setError] = useState('')

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º UID –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const uid = user?.uid || ''

  const handleUpload = async () => {
    if (!isAuthenticated) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö')
      return
    }

    if (!url && selectedMethod === 'url') {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ HSR URL')
      return
    }
    
    setIsLoading(true)
    setError('')
    setResult(null)

    try {
      if (selectedMethod === 'url') {
        const response = await axios.post(`/api/upload/url/${uid}`, { url })
        setResult(response.data)
        setUrl('') // –û—á–∏—â–∞–µ–º URL –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
      }
    } catch (error: any) {
      console.error('Upload error:', error)
      setError(error.response?.data?.message || error.response?.data?.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö')
    } finally {
      setIsLoading(false)
    }
  }

  if (!isAuthenticated) {
    return (
      <div className="space-y-6">
        <div className="text-center">
          <h1 className="text-3xl font-bold text-white mb-4">üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h1>
          <p className="text-gray-400 mb-6">–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫—Ä—É—Ç–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</p>
          <div className="text-6xl mb-4">üö™</div>
          <p className="text-lg text-gray-300">–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É</p>
        </div>
      </div>
    )
  }

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h1 className="text-3xl font-bold text-white mb-4">üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫—Ä—É—Ç–æ–∫</h1>
        <p className="text-gray-400">–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –∫—Ä—É—Ç–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</p>
        <div className="mt-4 p-3 bg-hsr-gold/20 border border-hsr-gold/30 rounded-lg inline-block">
          <p className="text-hsr-gold text-sm">
            üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <span className="font-bold">{user?.username}</span> (UID: {uid})
          </p>
        </div>
      </div>

      {error && (
        <div className="max-w-2xl mx-auto">
          <div className="bg-red-500/20 border border-red-500/30 rounded-lg p-4">
            <p className="text-red-300">{error}</p>
          </div>
        </div>
      )}

      {result && (
        <div className="max-w-2xl mx-auto">
          <div className="bg-green-500/20 border border-green-500/30 rounded-lg p-4">
            <h3 className="text-green-300 font-bold mb-2">‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h3>
            <div className="text-gray-300 text-sm space-y-1">
              <p>‚Ä¢ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: <span className="text-green-400">{result.imported}</span> –∫—Ä—É—Ç–æ–∫</p>
              <p>‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: <span className="text-yellow-400">{result.skipped}</span> (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)</p>
              <p>‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: <span className="text-blue-400">{result.total}</span></p>
            </div>
          </div>
        </div>
      )}

      <div className="max-w-2xl mx-auto">
        <div className="card">
          {/* Method Selection */}
          <div className="mb-6">
            <label className="block text-white font-semibold mb-3">–ú–µ—Ç–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏:</label>
            <div className="flex space-x-4">
              <button
                onClick={() => setSelectedMethod('url')}
                className={`px-4 py-2 rounded-lg font-medium transition-all ${
                  selectedMethod === 'url'
                    ? 'bg-hsr-gold text-black'
                    : 'bg-white/10 text-white hover:bg-white/20'
                }`}
              >
                –ß–µ—Ä–µ–∑ URL
              </button>
              <button
                onClick={() => setSelectedMethod('file')}
                className={`px-4 py-2 rounded-lg font-medium transition-all ${
                  selectedMethod === 'file'
                    ? 'bg-hsr-gold text-black'
                    : 'bg-white/10 text-white hover:bg-white/20'
                }`}
              >
                –§–∞–π–ª JSON
              </button>
            </div>
          </div>

          {/* URL Method */}
          {selectedMethod === 'url' && (
            <div className="mb-6">
              <label className="block text-white font-semibold mb-2">URL –∏—Å—Ç–æ—Ä–∏–∏ –∫—Ä—É—Ç–æ–∫:</label>
              <textarea
                value={url}
                onChange={(e) => setUrl(e.target.value)}
                placeholder="–í—Å—Ç–∞–≤—å—Ç–µ URL, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —á–µ—Ä–µ–∑ PowerShell –∫–æ–º–∞–Ω–¥—É"
                rows={4}
                className="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-hsr-gold resize-none"
              />
              <p className="text-gray-400 text-sm mt-2">
                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ PowerShell –∫–æ–º–∞–Ω–¥—É —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL
              </p>
            </div>
          )}

          {/* File Method */}
          {selectedMethod === 'file' && (
            <div className="mb-6">
              <label className="block text-white font-semibold mb-2">JSON —Ñ–∞–π–ª:</label>
              <div className="border-2 border-dashed border-white/20 rounded-lg p-8 text-center hover:border-hsr-gold/50 transition-colors">
                <input
                  type="file"
                  accept=".json"
                  className="hidden"
                  id="file-upload"
                />
                <label htmlFor="file-upload" className="cursor-pointer">
                  <div className="text-4xl mb-4">üìÅ</div>
                  <p className="text-white mb-2">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ JSON —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞</p>
                  <p className="text-gray-400 text-sm">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã .json</p>
                </label>
              </div>
            </div>
          )}

          {/* Upload Button */}
          <button
            onClick={handleUpload}
            disabled={isLoading || (!url && selectedMethod === 'url')}
            className="w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
          >
            {isLoading ? (
              <>
                <div className="loading-spinner mr-2"></div>
                –ó–∞–≥—Ä—É–∑–∫–∞...
              </>
            ) : (
              '–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'
            )}
          </button>
        </div>

        {/* Instructions */}
        <div className="card mt-6">
          <h3 className="text-lg font-semibold text-white mb-4">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Å—Å—ã–ª–∫–∏</h3>
          <ol className="list-decimal list-inside space-y-2 text-gray-300">
            <li>–ó–∞–∫—Ä–æ–π—Ç–µ –∏–≥—Ä—É Honkai Star Rail</li>
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</li>
            <li>–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</li>
            <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" (UID –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)</li>
          </ol>
        </div>
      </div>
    </div>
  )
}

export default Upload
