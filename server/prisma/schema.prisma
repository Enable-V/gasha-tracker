// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  uid         String   @unique @db.VarChar(20)
  username    String   @db.VarChar(50)
  email       String?  @unique @db.VarChar(100)
  password    String?  @db.VarChar(255)
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  gachaPulls  GachaPull[]
  userStats   UserStats[]
  
  @@map("users")
}

model Banner {
  id          Int      @id @default(autoincrement())
  bannerId    String   @unique @map("banner_id") @db.VarChar(20)
  bannerName  String   @map("banner_name") @db.VarChar(100)
  bannerType  BannerType @map("banner_type")
  game        GameType @default(HSR)
  startTime   DateTime? @map("start_time")
  endTime     DateTime? @map("end_time")
  createdAt   DateTime @default(now()) @map("created_at")
  
  gachaPulls  GachaPull[]
  
  @@unique([bannerId, game])
  @@map("banners")
}

model GachaPull {
  id          BigInt   @id @default(autoincrement())
  userId      Int      @map("user_id")
  bannerId    String   @map("banner_id") @db.VarChar(20)
  gachaId     String   @map("gacha_id") @db.VarChar(50)
  itemName    String   @map("item_name") @db.VarChar(100)
  itemType    String   @map("item_type") @db.VarChar(50)
  rankType    Int      @map("rank_type")
  time        DateTime
  pityCount   Int      @default(0) @map("pity_count")
  isFeatured  Boolean  @default(false) @map("is_featured")
  game        GameType @default(HSR)
  createdAt   DateTime @default(now()) @map("created_at")
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  banner      Banner   @relation(fields: [bannerId, game], references: [bannerId, game])
  
  @@unique([userId, gachaId])
  @@index([userId, bannerId, game])
  @@index([time])
  @@index([rankType])
  @@index([game])
  @@map("gacha_pulls")
}

model UserStats {
  id                Int      @id @default(autoincrement())
  userId            Int      @map("user_id")
  bannerType        String   @map("banner_type") @db.VarChar(20)
  game              GameType @default(HSR)
  totalPulls        Int      @default(0) @map("total_pulls")
  fiveStarCount     Int      @default(0) @map("five_star_count")
  fourStarCount     Int      @default(0) @map("four_star_count")
  threeStarCount    Int      @default(0) @map("three_star_count")
  currentPity       Int      @default(0) @map("current_pity")
  lastFiveStarTime  DateTime? @map("last_five_star_time")
  lastUpdated       DateTime @updatedAt @map("last_updated")
  
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, bannerType, game], name: "unique_user_banner_game")
  @@map("user_stats")
}

model ItemNameMapping {
  id          Int      @id @default(autoincrement())
  englishName String   @map("english_name") @db.VarChar(100)
  russianName String   @map("russian_name") @db.VarChar(100)
  game        GameType
  itemType    String   @map("item_type") @db.VarChar(50)
  rarity      Int      @map("rarity")
  createdAt   DateTime @default(now()) @map("created_at")
  
  @@unique([englishName, game], name: "unique_english_name_game")
  @@map("item_name_mappings")
}

enum GameType {
  HSR
  GENSHIN
}

enum BannerType {
  character
  weapon
  standard
  beginner
  chronicled
}
