#!/usr/bin/env tsx

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç paimon-moe JSON —Ñ–∞–π–ª –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
 */

import fs from 'fs'
import path from 'path'
import { normalizeItemName } from '../src/utils/normalizeUtils'

const jsonPath = path.resolve('../paimon-moe-local-data.json')

if (!fs.existsSync(jsonPath)) {
  console.error('‚ùå JSON —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:', jsonPath)
  process.exit(1)
}

console.log('üìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º paimon-moe JSON —Ñ–∞–π–ª...')
console.log('üìÇ –ü—É—Ç—å:', jsonPath)

const data = JSON.parse(fs.readFileSync(jsonPath, 'utf8'))

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
console.log('\n=== –°–¢–†–£–ö–¢–£–†–ê –§–ê–ô–õ–ê ===')
console.log('üéÆ UID:', data['wish-uid'])
console.log('üåç –°–µ—Ä–≤–µ—Ä:', data.server)
console.log('üóìÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω:', data['update-time'])

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–Ω–Ω–µ—Ä—ã
const banners = [
  'wish-counter-character-event',
  'wish-counter-weapon-event', 
  'wish-counter-standard',
  'wish-counter-chronicled'
]

console.log('\n=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ù–ù–ï–†–û–í ===')
let totalPulls = 0
let uniqueItems = new Set()

banners.forEach(bannerKey => {
  const banner = data[bannerKey]
  if (banner && banner.pulls) {
    const pulls = banner.pulls.length
    console.log(`${bannerKey}: ${pulls} –∫—Ä—É—Ç–æ–∫`)
    totalPulls += pulls
    
    banner.pulls.forEach((pull: any) => {
      uniqueItems.add(pull.id || pull.name || 'unknown')
    })
  }
})

console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—É—Ç–æ–∫: ${totalPulls}`)
console.log(`üéØ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${uniqueItems.size}`)

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –∏–º–µ–Ω
console.log('\n=== –¢–ï–°–¢ –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–ò –ò–ú–ï–ù ===')

// –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –≤—Å–µ—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤
const allItems: Array<{name: string, banner: string, time: string}> = []

banners.forEach(bannerKey => {
  const banner = data[bannerKey]
  if (banner && banner.pulls) {
    banner.pulls.forEach((pull: any) => {
      const itemName = pull.id || pull.name || 'unknown'
      allItems.push({
        name: itemName,
        banner: bannerKey,
        time: pull.time
      })
    })
  }
})

// –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º –∏–º–µ–Ω–∞–º –¥–ª—è –ø–æ–∏—Å–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
const normalizedGroups: Record<string, Array<{name: string, banner: string, time: string}>> = {}

allItems.forEach(item => {
  const normalized = normalizeItemName(item.name)
  if (!normalizedGroups[normalized]) {
    normalizedGroups[normalized] = []
  }
  normalizedGroups[normalized].push(item)
})

console.log('\n=== –¢–û–ü –ß–ê–°–¢–û –í–°–¢–†–ï–ß–ê–Æ–©–ò–•–°–Ø –ü–†–ï–î–ú–ï–¢–û–í ===')
Object.entries(normalizedGroups)
  .sort(([,a], [,b]) => b.length - a.length)
  .slice(0, 10)
  .forEach(([normalized, items]) => {
    console.log(`"${normalized}": ${items.length} —Ä–∞–∑`)
    if (items.length > 1) {
      const uniqueNames = [...new Set(items.map(i => i.name))]
      if (uniqueNames.length > 1) {
        console.log(`  ‚ö†Ô∏è –†–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: ${uniqueNames.join(', ')}`)
      }
    }
  })

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º—è –¥–ª—è 10-pull –±–∞—Ç—á–µ–π
console.log('\n=== –ê–ù–ê–õ–ò–ó –í–†–ï–ú–ï–ù–ò (10-PULL –ë–ê–¢–ß–ò) ===')
const timeGroups: Record<string, number> = {}

allItems.forEach(item => {
  const timeKey = item.time
  timeGroups[timeKey] = (timeGroups[timeKey] || 0) + 1
})

const batchTimes = Object.entries(timeGroups)
  .filter(([,count]) => count >= 10)
  .sort(([,a], [,b]) => b - a)

console.log(`üïê –ù–∞–π–¥–µ–Ω–æ ${batchTimes.length} 10-pull –±–∞—Ç—á–µ–π:`)
batchTimes.slice(0, 5).forEach(([time, count]) => {
  console.log(`  ${time}: ${count} –∫—Ä—É—Ç–æ–∫`)
})

if (batchTimes.length > 0) {
  console.log('\n‚úÖ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç 10-pull –±–∞—Ç—á–∏ - –æ—Ç–ª–∏—á–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –Ω–∞—à–µ–π –ª–æ–≥–∏–∫–∏!')
} else {
  console.log('\n‚ö†Ô∏è 10-pull –±–∞—Ç—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ —Ñ–∞–π–ª –≤—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
}

console.log('\nüéØ –ì–æ—Ç–æ–≤–æ –∫ –∏–º–ø–æ—Ä—Ç—É! –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ—Ç:')
console.log('‚úÖ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –∏–º–µ–Ω (—Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã)')
console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫—É —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –±–∞–Ω–Ω–µ—Ä–æ–≤')
console.log('‚úÖ –õ–æ–≥–∏–∫—É –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ –≤—Ä–µ–º–µ–Ω–∏')
console.log(`‚úÖ –ò–º–ø–æ—Ä—Ç ${totalPulls} –∫—Ä—É—Ç–æ–∫ –∏–∑ ${uniqueItems.size} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤`)
