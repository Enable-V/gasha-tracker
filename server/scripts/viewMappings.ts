#!/usr/bin/env tsx

import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function viewMappings() {
  console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n')

  try {
    const mappings = await prisma.itemNameMapping.findMany({
      orderBy: [
        { game: 'asc' },
        { itemType: 'asc' },
        { englishName: 'asc' }
      ]
    })

    console.log(`üìã –í—Å–µ–≥–æ –º–∞–ø–ø–∏–Ω–≥–æ–≤: ${mappings.length}\n`)

    if (mappings.length === 0) {
      console.log('‚ùå –ú–∞–ø–ø–∏–Ω–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
      return
    }

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∏–≥—Ä–∞–º
    const genshinMappings = mappings.filter(m => m.game === 'GENSHIN')
    const hsrMappings = mappings.filter(m => m.game === 'HSR')

    if (genshinMappings.length > 0) {
      console.log('üéÆ GENSHIN IMPACT:')
      console.log('‚îÄ'.repeat(80))
      genshinMappings.forEach((m, i) => {
        console.log(`${(i + 1).toString().padStart(3)}. ${m.englishName.padEnd(25)} -> ${m.russianName.padEnd(25)} (${m.itemType})`)
      })
      console.log()
    }

    if (hsrMappings.length > 0) {
      console.log('üåü HONKAI STAR RAIL:')
      console.log('‚îÄ'.repeat(80))
      hsrMappings.forEach((m, i) => {
        console.log(`${(i + 1).toString().padStart(3)}. ${m.englishName.padEnd(25)} -> ${m.russianName.padEnd(25)} (${m.itemType})`)
      })
      console.log()
    }

    console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–ø–ø–∏–Ω–≥–æ–≤:', error)
  } finally {
    await prisma.$disconnect()
  }
}

viewMappings()
