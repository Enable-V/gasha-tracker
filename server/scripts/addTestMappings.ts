#!/usr/bin/env tsx

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
 */
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

const testMappings = [
  // Genshin Impact - Weapons  
  { englishName: 'rainslasher', russianName: '–î–æ–∂–¥–µ—Ä–µ–∑', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'black tassel', russianName: '–ß—ë—Ä–Ω–∞—è –∫–∏—Å—Ç—å', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'harbinger of dawn', russianName: '–ü—Ä–µ–¥–≤–µ—Å—Ç–Ω–∏–∫ –∑–∞—Ä–∏', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'slingshot', russianName: '–†–æ–≥–∞—Ç–∫–∞', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'magic guide', russianName: '–ú–∞–≥–∏—á–µ—Å–∫–∏–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'bloodtainted greatsword', russianName: '–ü–æ–∫—Ä—ã—Ç—ã–π –∫—Ä–æ–≤—å—é –¥–≤—É—Ä—É—á–Ω—ã–π –º–µ—á', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'debate club', russianName: '–î–∏—Å–∫—É—Å—Å–∏—è', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'sharpshooters oath', russianName: '–ö–ª—è—Ç–≤–∞ —Å—Ç—Ä–µ–ª–∫–∞', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'emerald orb', russianName: '–ò–∑—É–º—Ä—É–¥–Ω–∞—è —Å—Ñ–µ—Ä–∞', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'thrilling tales of dragon slayers', russianName: '–î—Ä–∞–∫–æ–Ω–æ–±–æ—Ä—Ü—ã', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'raven bow', russianName: '–í–æ—Ä–æ–Ω–æ–≤ –ª—É–∫', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'cool steel', russianName: '–•–æ–ª–æ–¥–Ω–æ–µ –ª–µ–∑–≤–∏–µ', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'skyrider sword', russianName: '–ú–µ—á –Ω–µ–±–µ—Å–Ω–æ–≥–æ –≤—Å–∞–¥–Ω–∏–∫–∞', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'the bell', russianName: '–ö–æ–ª–æ–∫–æ–ª', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'sacrificial bow', russianName: '–ñ–µ—Ä—Ç–≤–µ–Ω–Ω—ã–π –ª—É–∫', game: 'GENSHIN' as const, itemType: 'weapon' },
  { englishName: 'ferrous shadow', russianName: '–°—Ç–∞–ª—å–Ω–∞—è —Ç–µ–Ω—å', game: 'GENSHIN' as const, itemType: 'weapon' },

  // Genshin Impact - Characters
  { englishName: 'kachina', russianName: '–ö–∞—á–∏–Ω–∞', game: 'GENSHIN' as const, itemType: 'Character' },
  { englishName: 'thoma', russianName: '–¢–æ–º–∞', game: 'GENSHIN' as const, itemType: 'Character' },
  { englishName: 'chevreuse', russianName: '–®–µ–≤—Ä—ë–∑', game: 'GENSHIN' as const, itemType: 'Character' },
  { englishName: 'gorou', russianName: '–ì–æ—Ä–æ—É', game: 'GENSHIN' as const, itemType: 'Character' },
  { englishName: 'lisa', russianName: '–õ–∏–∑–∞', game: 'GENSHIN' as const, itemType: 'Character' },

  // HSR - Light Cones
  { englishName: 'arrows', russianName: '–°—Ç—Ä–µ–ª—ã', game: 'HSR' as const, itemType: 'Light Cone' },
  { englishName: 'cornucopia', russianName: '–†–æ–≥ –∏–∑–æ–±–∏–ª–∏—è', game: 'HSR' as const, itemType: 'Light Cone' },
  { englishName: 'data bank', russianName: '–ë–∞–Ω–∫ –¥–∞–Ω–Ω—ã—Ö', game: 'HSR' as const, itemType: 'Light Cone' },
  
  // HSR - Characters  
  { englishName: 'march 7th', russianName: '–ú–∞—Ä—Ç–∞ 7-–µ', game: 'HSR' as const, itemType: 'Character' },
  { englishName: 'dan heng', russianName: '–î–∞–Ω—å –•—ç–Ω', game: 'HSR' as const, itemType: 'Character' },
  { englishName: 'himeko', russianName: '–•–∏–º—ç–∫–æ', game: 'HSR' as const, itemType: 'Character' },
]

async function addTestMappings() {
  console.log('üåü –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤...')
  
  try {
    for (const mapping of testMappings) {
      try {
        await prisma.itemNameMapping.create({
          data: mapping
        })
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${mapping.englishName} ‚Üí ${mapping.russianName} (${mapping.game})`)
      } catch (error: any) {
        if (error.code === 'P2002') {
          console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): ${mapping.englishName} (${mapping.game})`)
        } else {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ${mapping.englishName}:`, error.message)
        }
      }
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalCount = await prisma.itemNameMapping.count()
    const genshinCount = await prisma.itemNameMapping.count({ where: { game: 'GENSHIN' } })
    const hsrCount = await prisma.itemNameMapping.count({ where: { game: 'HSR' } })
    
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤:`)
    console.log(`   –í—Å–µ–≥–æ: ${totalCount}`)
    console.log(`   Genshin Impact: ${genshinCount}`)
    console.log(`   Honkai Star Rail: ${hsrCount}`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

addTestMappings()
