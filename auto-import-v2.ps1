# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HSR URL –∏ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
param([string]$uid = "123456789")

Write-Host "=== HSR Gacha Auto Import Script ===" -ForegroundColor Cyan
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è HSR URL
function Get-HSRGachaURL {
    Write-Host "–ü–æ–ª—É—á–µ–Ω–∏–µ HSR Gacha URL..." -ForegroundColor Yellow
    
    try {
        Write-Host "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏..." -ForegroundColor Gray
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
        $tempScript = [System.IO.Path]::GetTempFileName() + ".ps1"
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç HSR
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        $scriptContent = (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Enable-V/honkai/main/scripts/hsr_getlink.ps1')
        Set-Content -Path $tempScript -Value $scriptContent -Encoding UTF8
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç –∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤–µ—Å—å –≤—ã–≤–æ–¥
        $process = Start-Process -FilePath "powershell.exe" -ArgumentList "-ExecutionPolicy", "Bypass", "-File", $tempScript -PassThru -RedirectStandardOutput ([System.IO.Path]::GetTempFileName()) -RedirectStandardError ([System.IO.Path]::GetTempFileName()) -WindowStyle Hidden
        $process.WaitForExit(30000) # –ñ–¥–µ–º –º–∞–∫—Å–∏–º—É–º 30 —Å–µ–∫—É–Ω–¥
        
        # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥
        $output = ""
        if (Test-Path $process.StartInfo.RedirectStandardOutput) {
            $output = Get-Content $process.StartInfo.RedirectStandardOutput -Raw
        }
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        Remove-Item $tempScript -Force -ErrorAction SilentlyContinue
        Remove-Item $process.StartInfo.RedirectStandardOutput -Force -ErrorAction SilentlyContinue
        Remove-Item $process.StartInfo.RedirectStandardError -Force -ErrorAction SilentlyContinue
        
        Write-Host "–ü–æ–ª—É—á–µ–Ω –≤—ã–≤–æ–¥ –æ—Ç HSR —Å–∫—Ä–∏–ø—Ç–∞" -ForegroundColor Gray
        
        # –ò—â–µ–º URL –≤ –≤—ã–≤–æ–¥–µ
        if ($output -match '(https://[^\s]*gacha_record[^\s]*)') {
            $url = $Matches[1]
            if ($url -match "authkey=" -and $url.Length -gt 100) {
                Write-Host "–ù–∞–π–¥–µ–Ω–∞ HSR URL!" -ForegroundColor Green
                return $url
            }
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        try {
            $clipboardContent = Get-Clipboard -ErrorAction SilentlyContinue
            if ($clipboardContent -and ($clipboardContent -match "gacha_record.*authkey=")) {
                Write-Host "URL –Ω–∞–π–¥–µ–Ω–∞ –≤ –±—É—Ñ–µ—Ä–µ –æ–±–º–µ–Ω–∞!" -ForegroundColor Green
                return $clipboardContent
            }
        } catch {
            Write-Host "–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Yellow
        }
        
        throw "HSR URL –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    }
    catch {
        Write-Host "–û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ HSR –∑–∞–ø—É—â–µ–Ω–∞ –∏ –∏—Å—Ç–æ—Ä–∏—è –∫—Ä—É—Ç–æ–∫ –±—ã–ª–∞ –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞" -ForegroundColor Yellow
        return $null
    }
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
Write-Host "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å UID: $uid" -ForegroundColor Cyan
try {
    $createBody = @{ uid = $uid } | ConvertTo-Json
    $createResult = Invoke-RestMethod -Uri "http://localhost:3001/api/test/create-user" -Method POST -ContentType "application/json" -Body $createBody
    Write-Host "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: $($createResult.user.uid)" -ForegroundColor Green
} catch {
    if ($_.Exception.Message -match "409") {
        Write-Host "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
    } else {
        Write-Host "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $($_.Exception.Message)" -ForegroundColor Yellow
    }
}

# –ü–æ–ª—É—á–∞–µ–º URL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
Write-Host ""
$gachaURL = Get-HSRGachaURL

if ($gachaURL) {
    Write-Host ""
    Write-Host "URL –ø–æ–ª—É—á–µ–Ω–∞, –¥–ª–∏–Ω–∞: $($gachaURL.Length) —Å–∏–º–≤–æ–ª–æ–≤" -ForegroundColor Gray
    Write-Host ""
    
    # –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    Write-Host "–ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è UID: $uid" -ForegroundColor Cyan
    try {
        $importBody = @{ url = $gachaURL } | ConvertTo-Json
        $importResult = Invoke-RestMethod -Uri "http://localhost:3001/api/upload/url/$uid" -Method POST -ContentType "application/json" -Body $importBody -TimeoutSec 120
        
        Write-Host ""
        Write-Host "üéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        Write-Host "üìä –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: $($importResult.imported)" -ForegroundColor Green
        Write-Host "‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: $($importResult.skipped)" -ForegroundColor Yellow
        Write-Host "üíæ –°–æ–æ–±—â–µ–Ω–∏–µ: $($importResult.message)" -ForegroundColor Cyan
        
    } catch {
        Write-Host ""
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: $($_.Exception.Message)" -ForegroundColor Red
        if ($_.ErrorDetails) {
            Write-Host "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: $($_.ErrorDetails.Message)" -ForegroundColor Red
        }
    }
} else {
    Write-Host ""
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å HSR URL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏" -ForegroundColor Red
    Write-Host "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤—Ä—É—á–Ω—É—é –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ PowerShell:" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "Set-ExecutionPolicy Bypass -Scope Process -Force" -ForegroundColor Cyan
    Write-Host "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072" -ForegroundColor Cyan  
    Write-Host "iex (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/Enable-V/honkai/main/scripts/hsr_getlink.ps1')" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "=== –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω ===" -ForegroundColor Cyan
